#!/usr/bin/env node

// Dependencies ---------------------------------------------------------------
// ----------------------------------------------------------------------------
var fs = require('fs'),
    Parser = require('../lib/spec/Parser'),
    Validator = require('../lib/validator/Validator'),
    Reporter = require('../lib/reporter/Reporter');


// Command Line API -----------------------------------------------------------
// ----------------------------------------------------------------------------
if (process.argv.length < 3) {
    process.stdout.write('Usage: featureful [configfile | pattern...]\n');
    process.exit(0);

} else {
    
    // Verification of Tests against Features
    if (process.argv[2].match(/\.js$/)) {

        var options = require(process.argv[2]),
            parser = new Parser(options);

        parser.matchSpecs().then(function(specs) {

            // Reporting
            if (process.argv.length >= 4 && process.argv[3].match(/\.xml$/)) {

                var reporter = new Reporter(options);

                fs.writeFileSync(
                    process.argv[3], 
                    reporter.run(specs, process.argv[3])
                );

            // Validation
            } else {

                var validator = new Validator(options),
                    error = validator.compare(specs);

                if (error) {
                    process.stderr.write(error.format());
                    process.exit(1);
                }

            }

        }, function(err) {
            process.stderr.write(err.toString() + '\n');
            process.exit(1);
        });

    // AST generation from feature files
    } else {

        var files = Parser.parseFeatureFromPatterns(process.argv.slice(2));
        if (files instanceof Error) {
            process.stderr.write(files.toString() + '\n');
            process.exit(1);
            
        } else {
            process.stdout.write(JSON.stringify(files, '', 2));
            
        }
        
    }

}

